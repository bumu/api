syntax = "proto3";

package sec.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/any.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "noah/gen/go/sec/v1;secv1";
option java_multiple_files = true;
option java_outer_classname = "UASServiceProto";
option java_package = "com.airdb.sec.v1";

service UASService {
  option (google.api.default_host) = "apigw.airdb.com";
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Security Service - WAF"};

  // UASService
  rpc UASService(SecCheckRequest) returns (SecCheckResponse) {
    option (google.api.http) = {
      post: "/apis/v1/sgw/sec/check",
      body: "payload"
      response_body: "data"
    };
    option (google.api.method_signature) = "user_agent";
  }
}

message SecCheckRequest {
  string user_agent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string.min_len = 1
  ];
  map<string, google.protobuf.Any> payload = 2;
  string fingerprint_ja3 = 3;
  string fingerprint_h2 = 4;
  string client_ip = 5;
  string method = 6;
  string url = 7;
  string req_headers = 8;
  string req_body = 9;
  string protocol = 10;
  string request_id = 11;
}

message SecCheckResponse {
  google.protobuf.Any data = 4;
  string request_id = 1;
  int32 action = 2;
  string err_msg = 3;
  string resp_body = 5;
  string resp_headers = 6;
}
